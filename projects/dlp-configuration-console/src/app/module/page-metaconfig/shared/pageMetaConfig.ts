export let pageSectionConfig = [
    {
        "componentType": "TITLE",
        "className": null,
        "validateSection":false,
        "mandatory":false,
        "sectionContent": {
          "isShow": true,
          "titleData": "PageMetaConfig Builder"
        }
    },
    
    {
      "componentType": "FORM",
      "validateSection": true,
      "mandatory": false,
      "className": "mb-10 x-large coapplicant-padding",
      "sectionContent": {
        "options": {
          "columnSize": 2
        },
        "isShow": true,
        "fields": [
          {
            "fieldDataType": "TABLE",
            "dependentField": null,
            "isMandatory": false,
            "fieldLabel": "Add Key-value for MetaConfig",
            "fieldAccessModifier": "EDITABLE",
            "addTableFields": true,
            "minLength": null,
            "maxLength": null,
            "error": null,
            "value": [],
            "validationJson": "",
            "rulesFor": null,
            "regex": null,
            "addStatus": false,
            "isTableFooter": false,
            "emitedValue": [],
            "showAction": true,
            "addMore": true,
            
            "tableRowActions": [{
                "actionCode": "ACCEPT",
                "icon": "check",
                "className": "clr-green",
                "isDisplay": true
            },
            {
                "actionCode": "EDIT",
                "icon": "edit",
                "className": "clr-blue",
                "isDisplay": false
            },
            {
                "actionCode": "DELETE",
                "icon": "delete",
                "className": "clr-red",
                "isDisplay": true
            }],
            "validateRowBeforeAdd": true,
            "showSerialNo": true,
            "tableFields": [
                {
                    "fieldDataType": "TEXT",
                    "dependentField": null,
                    "isMandatory": true,
                    "upperCase":true,
                    "fieldLabel": "keyName",
                    "fieldAccessModifier": "EDITABLE",
                    "minLength": null,
                    "maxLength": null,
                    "error": null,
                    "value": "",
                    "validationJson": null,
                    "rulesFor": null,
                    "regex": null,
                    "options": [],
                    "regexErrorMessage": null,
                    "errorIconPath": null,
                    "rowNo": null,
                    "columnNo": null,
                    "placeholderText": "",
                    "fieldName": "key",
                    "showLabel": true,
                    "labelInfo": null,
                    "groupName": "",
                    "groupIndex": 4,
                    "showField": true
                },
                {
                  "fieldDataType": "TEXT_AREA",
                  "isMandatory": false,
                  "commonpropertyType": null,
                  "fieldLabel": "value",
                  "fieldAccessModifier": "EDITABLE",
                  "minLength": null,
                  "upperCase":true,
                  "maxLength": null,
                  "error": null,
                  "value": null,
                  "validationJson": null,
                  "rulesFor": null,
                  "regex": null,
                  "options": [],
                  "regexErrorMessage": null,
                  "rowNo": 1,
                  "columnNo": 1,
                  "groupName": "",
                  rows:4,
                  "groupIndex": 1,
                  "placeholderText": "",
                  "fieldName": "value",
                  "labelInfo": null,
                  "showLabel": true,
                  "showField": true
              }
            ],
            "regexErrorMessage": null,
            "errorIconPath": null,
            "rowNo": null,
            "columnNo": null,
            "placeholderText": "",
            "fieldName": "metaKeys",
            "showLabel": true,
            "labelInfo": "you can use these keys to do validation/condition in your pages in the journey",
            "groupName": "",
            "groupIndex": 1,
            "showField": true
        },

        ]
      }
    }

]
export let pageSectionConfig_prepopulationremap =[{
  "componentType": "TITLE",
  "className": null,
  "validateSection":false,
  "mandatory":false,
  "sectionContent": {
    "isShow": true,
    "titleData": "Prepopulation Remap Builder"
  }},
  // { "componentType": "PARAGRAPH",
  //   "className": "common-info",
  //   "validateSection":false,
  //   "mandatory":false,
  //   "sectionContent": {
  //     "isShow": true,
  //     "paragraphData": "you can access documentation of this feature",
  //     "endLinks":[
  //       {
  //         "label":"here",
  //         "linkType":"ACTION_ID",
  //         "actionId":"PREPOP_DOCS"
  //       }
  //     ]
  //   }},
  {
    "componentType": "FORM",
    "validateSection": true,
    "mandatory": false,
    "className": "mb-10 x-large coapplicant-padding",
    "sectionContent": {
      "options": {
        "columnSize": 2
      },
      "isShow": true,
      "fields": [
        {
          "fieldDataType": "TEXT",
          "isMandatory": true,
          "commonpropertyType": null,
          "fieldLabel": "Prepopulation field Name",
          "fieldAccessModifier": "EDITABLE",
          "minLength": null,
          "maxLength": null,
          "error": null,
          "value": null,
          "validationJson": null,
          "rulesFor": null,
          "regex": null,
          "options": [],
          "regexErrorMessage": null,
          "rowNo": 1,
          "columnNo": 1,
          "groupName": "",
          "groupIndex": 1,
          "placeholderText": "",
          "fieldName": "fieldName",
          "labelInfo": "this value denotes the fieldname of the field Which you are going to prepopulate",
          "showLabel": true,
          "showField": true
      }, 
      {
        "fieldDataType": "BOOLEAN",
        "isMandatory": false,
        "fieldLabel": "Add Multiple variable paths Appended",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "maxLength": 100,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": ["variablepath","multiplevariablepath"],
        "regex": null,
        "regexErrorMessage": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "Enter Content",
        "fieldName": "ismultiplevariablepath",
        "labelInfo": null,
        "showLabel": true,
        "groupName": "",
        "groupIndex": 1,
        "showField": true
      },
      {
        "fieldDataType": "TABLE",
        "dependentField": null,
        "isMandatory": true,
        "fieldLabel": "Add Multiple variable path",
        "fieldAccessModifier": "EDITABLE",
        "addTableFields": true,
        "minLength": null,
        "maxLength": null,
        "error": null,
        "value": [],
        "validationJson": {
          "showField":{"==":[{"var":"ismultiplevariablepath"},true]}
        },
        "rulesFor": null,
        "regex": null,
        "addStatus": false,
        "isTableFooter": false,
        "emitedValue": [],
        "showAction": true,
        "addMore": true,
        "tableRowActions": [{
            "actionCode": "ACCEPT",
            "icon": "check",
            "className": "clr-green",
            "isDisplay": true
        },
        {
            "actionCode": "EDIT",
            "icon": "edit",
            "className": "clr-blue",
            "isDisplay": false
        },
        {
            "actionCode": "DELETE",
            "icon": "delete",
            "className": "clr-red",
            "isDisplay": true
        }],
        "validateRowBeforeAdd": true,
        "showSerialNo": true,
        "tableFields": [
            {
                "fieldDataType": "DROPDOWN",
                "dependentField": null,
                "isMandatory": true,
                "upperCase":true,
                "fieldLabel": "static variable/ object path variable?",
                "fieldAccessModifier": "EDITABLE",
                "minLength": null,
                "maxLength": null,
                "error": null,
                "value": "",
                "validationJson": null,
                "rulesFor": null,
                "regex": null,
                "options": [{
                  "optionName":"STATIC",
                  "optionKey":"STATIC",

                },{
                  "optionName":"PATH",
                  "optionKey":"PATH",

                }],
                "regexErrorMessage": null,
                "errorIconPath": null,
                "rowNo": null,
                "columnNo": null,
                "placeholderText": "",
                "fieldName": "variableType",
                "showLabel": true,
                "labelInfo": null,
                "groupName": "",
                "groupIndex": 4,
                "showField": true
            },
            {
              "fieldDataType": "TEXT",
              "isMandatory": false,
              "commonpropertyType": null,
              "fieldLabel": "value",
              "fieldAccessModifier": "EDITABLE",
              "minLength": null,
              "upperCase":true,
              "maxLength": null,
              "error": null,
              "value": null,
              "validationJson": null,
              "rulesFor": null,
              "regex": null,
              "options": [],
              "regexErrorMessage": null,
              "rowNo": 1,
              "columnNo": 1,
              "groupName": "",
              rows:4,
              "groupIndex": 1,
              "placeholderText": "",
              "fieldName": "variablevalue",
              "labelInfo": null,
              "showLabel": true,
              "showField": true
          }
        ],
        "regexErrorMessage": null,
        "errorIconPath": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "",
        "fieldName": "multiplevariablepath",
        "showLabel": true,
        "labelInfo": null,
        "groupName": "",
        "groupIndex": 4,
        "showField": true
    },
      {
        "fieldDataType": "TEXT_AREA",
        "isMandatory": true,
        "commonpropertyType": null,
        "fieldLabel": "variable Path for the prepopulation",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "upperCase":true,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": {"showField":{"!":[{"var":"ismultiplevariablepath"}]}},
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        rows:8,
        "groupIndex": 3,
        "placeholderText": "",
        "fieldName": "variablepath",
        "labelInfo": "A variable path can be made conditional by returning the path through a Json Logic",
        "showLabel": true,
        "showField": true
      },
      {
        "fieldDataType": "BOOLEAN",
        "isMandatory": false,
        "fieldLabel": "Add as Additional properties to the field While Prepopulating",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "maxLength": 100,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": ['addtionalKeys'],
        "regex": null,
        "regexErrorMessage": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "Enter Content",
        "fieldName": "isextrakeys",
        "labelInfo": null,
        "showLabel": true,
        "groupName": "",
        "groupIndex": 4,
        "showField": true
      },
      {
        "fieldDataType": "TABLE",
        "dependentField": null,
        "isMandatory": false,
        "fieldLabel": "Add Addtional Key-value for field while prepopulating",
        "fieldAccessModifier": "EDITABLE",
        "addTableFields": true,
        "minLength": null,
        "maxLength": null,
        "error": null,
        "value": [],
        "validationJson": {
          "showField":{"==":[{"var":"isextrakeys"},true]}
        },
        "rulesFor": null,
        "regex": null,
        "addStatus": false,
        "isTableFooter": false,
        "emitedValue": [],
        "showAction": true,
        "addMore": true,
        "tableRowActions": [{
            "actionCode": "ACCEPT",
            "icon": "check",
            "className": "clr-green",
            "isDisplay": true
        },
        {
            "actionCode": "EDIT",
            "icon": "edit",
            "className": "clr-blue",
            "isDisplay": false
        },
        {
            "actionCode": "DELETE",
            "icon": "delete",
            "className": "clr-red",
            "isDisplay": true
        }],
        "validateRowBeforeAdd": true,
        "showSerialNo": true,
        "tableFields": [
            {
                "fieldDataType": "TEXT",
                "dependentField": null,
                "isMandatory": true,
                "upperCase":true,
                "fieldLabel": "keyName",
                "fieldAccessModifier": "EDITABLE",
                "minLength": null,
                "maxLength": null,
                "error": null,
                "value": "",
                "validationJson": null,
                "rulesFor": null,
                "regex": null,
                "options": [],
                "regexErrorMessage": null,
                "errorIconPath": null,
                "rowNo": null,
                "columnNo": null,
                "placeholderText": "",
                "fieldName": "key",
                "showLabel": true,
                "labelInfo": null,
                "groupName": "",
                "groupIndex": 4,
                "showField": true
            },
            {
              "fieldDataType": "TEXT_AREA",
              "isMandatory": false,
              "commonpropertyType": null,
              "fieldLabel": "value",
              "fieldAccessModifier": "EDITABLE",
              "minLength": null,
              "upperCase":true,
              "maxLength": null,
              "error": null,
              "value": null,
              "validationJson": null,
              "rulesFor": null,
              "regex": null,
              "options": [],
              "regexErrorMessage": null,
              "rowNo": 1,
              "columnNo": 1,
              "groupName": "",
              rows:4,
              "groupIndex": 1,
              "placeholderText": "",
              "fieldName": "value",
              "labelInfo": null,
              "showLabel": true,
              "showField": true
          }
        ],
        "regexErrorMessage": null,
        "errorIconPath": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "",
        "fieldName": "addtionalKeys",
        "showLabel": true,
        "labelInfo": null,
        "groupName": "",
        "groupIndex": 4,
        "showField": true
    },
      ]
    }
  },
  {
    "componentType": "BUTTON",
    "validateSection": false,
    "mandatory":false,
    "className": null,
    "sectionContent": {
      "label": "Add Prepopulation",
      "actionId": "ADD_PREPOPULATION",
      "className": 'primary-btn mb-20',
      "isShow": true
    }
  }
]

export let pageSectionConfig_formSubmitflow = [{
  "componentType": "TITLE",
  "className": null,
  "validateSection":false,
  "mandatory":false,
  "sectionContent": {
    "isShow": true,
    "titleData": "FormSubmitflow Builder"
  }},
  {
    "componentType": "FORM",
    "validateSection": true,
    "mandatory": false,
    "className": "mb-10 x-large coapplicant-padding",
    "sectionContent": {
      "options": {
        "columnSize": 2
      },
      "isShow": true,
      "fields": [
        {
          "fieldDataType": "TEXT",
          "isMandatory": true,
          "commonpropertyType": null,
          "fieldLabel": "Submitflow Name",
          "fieldAccessModifier": "EDITABLE",
          "minLength": null,
          "maxLength": null,
          "error": null,
          "value": null,
          "validationJson": null,
          "rulesFor": null,
          "regex": null,
          "options": [],
          "regexErrorMessage": null,
          "rowNo": 1,
          "columnNo": 1,
          "groupName": "",
          "groupIndex": 1,
          "placeholderText": "",
          "fieldName": "submitflow",
          "labelInfo": null,
          "showLabel": true,
          "showField": true
      },{
        "fieldDataType": "BOOLEAN",
        "isMandatory": false,
        "fieldLabel": "Save Response to Product Object",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "maxLength": 100,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor":null,
        "regex": null,
        "regexErrorMessage": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "Enter Content",
        "fieldName": "saveResponseToProduct",
        "labelInfo": null,
        "showLabel": true,
        "groupName": "",
        "groupIndex": 1,
        "showField": true
      },
      {
        "fieldDataType": "TEXT_AREA",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "JSON Logic to Validate before hitting the API",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "upperCase":true,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        rows:8,
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "validationJson",
        "labelInfo": "This JSON logic decides wheather to hit this api or skip this api based on the condition provided in the JSON \n to HIT the api JSON has to return 'EXECUTE' code \n to skip the api call JSON has to return 'NEXT'",
        "showLabel": true,
        "showField": true
      },
      {
        "fieldDataType": "TABLE",
        "dependentField": null,
        "isMandatory": false,
        "fieldLabel": "Params",
        "fieldAccessModifier": "EDITABLE",
        "addTableFields": true,
        "minLength": null,
        "maxLength": null,
        "error": null,
        "value": [],
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "addStatus": false,
        "isTableFooter": false,
        "emitedValue": [],
        "showAction": true,
        "addMore": true,
        "tableRowActions": [{
            "actionCode": "ACCEPT",
            "icon": "check",
            "className": "clr-green",
            "isDisplay": true
        },
        {
            "actionCode": "EDIT",
            "icon": "edit",
            "className": "clr-blue",
            "isDisplay": false
        },
        {
            "actionCode": "DELETE",
            "icon": "delete",
            "className": "clr-red",
            "isDisplay": true
        }],
        "validateRowBeforeAdd": true,
        "showSerialNo": false,
        "tableFields": [
          {
            "fieldDataType": "TEXT",
            "isMandatory": true,
            "commonpropertyType": null,
            "fieldLabel": "Key Name",
            "fieldAccessModifier": "EDITABLE",
            "minLength": null,
            "upperCase":true,
            "maxLength": null,
            "error": null,
            "value": null,
            "validationJson": null,
            "rulesFor": null,
            "regex": null,
            "options": [],
            "regexErrorMessage": null,
            "rowNo": 1,
            "columnNo": 1,
            "groupName": "",
            rows:4,
            "groupIndex": 1,
            "placeholderText": "",
            "fieldName": "variablekey",
            "labelInfo": null,
            "showLabel": true,
            "showField": true
          },
            {
                "fieldDataType": "DROPDOWN",
                "dependentField": null,
                "isMandatory": true,
                "upperCase":true,
                "fieldLabel": "static variable/ object path  variable / Json Rule Output?",
                "fieldAccessModifier": "EDITABLE",
                "minLength": null,
                "maxLength": null,
                "error": null,
                "value": "",
                "validationJson": null,
                "rulesFor": null,
                "regex": null,
                "options": [{
                  "optionName":"STATIC",
                  "optionKey":"STATIC",

                },{
                  "optionName":"PATH",
                  "optionKey":"PATH",

                },{
                  "optionName":"RULE_OUTPUT",
                  "optionKey":"RULE_OUTPUT",

                },],
                "regexErrorMessage": null,
                "errorIconPath": null,
                "rowNo": null,
                "columnNo": null,
                "placeholderText": "",
                "fieldName": "variableType",
                "showLabel": true,
                "labelInfo": null,
                "groupName": "",
                "groupIndex": 4,
                "showField": true
            },
            {
              "fieldDataType": "TEXT_AREA",
              "isMandatory": false,
              "commonpropertyType": null,
              "fieldLabel": "value",
              "fieldAccessModifier": "EDITABLE",
              "minLength": null,
              "upperCase":true,
              "maxLength": null,
              "error": null,
              "value": null,
              "validationJson": null,
              "rulesFor": null,
              "regex": null,
              "options": [],
              "regexErrorMessage": null,
              "rowNo": 1,
              "columnNo": 1,
              "groupName": "",
              rows:4,
              "groupIndex": 1,
              "placeholderText": "",
              "fieldName": "variablevalue",
              "labelInfo": null,
              "showLabel": true,
              "showField": true
          }
        ],
        "regexErrorMessage": null,
        "errorIconPath": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "",
        "fieldName": "params",
        "showLabel": true,
        "labelInfo": null,
        "groupName": "",
        "groupIndex": 1,
        "showField": true
      },{
        "fieldDataType": "TEXT_AREA",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "JSON Logic to Validate After hitting the API",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "upperCase":true,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        rows:8,
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "validateResponse",
        "labelInfo": "This JSON logic decides what to do after hitting the api the JSON logic can return following codes: 'PROCEED' which means to go to the next formSubmitflow. 'NEXT' means to move the page to the next page of the pagesequence . 'PAGE_CODE' you can insert certain page code in the journey to navigate the journey to that particular page in the pagesequence . 'ERROR' means show Error to the user that this api is failed",
        "showLabel": true,
        "showField": true
      },{
        "fieldDataType": "TEXT_AREA",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "JSON Logic to Validate Api Errors",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "upperCase":true,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        rows:8,
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "apiError",
        "labelInfo": "This JSON logic decides what to do after hitting the api the JSON logic can return following codes: 'PROCEED' which means to go to the next formSubmitflow. 'NEXT' means to move the page to the next page of the pagesequence . 'PAGE_CODE' you can insert certain page code in the journey to navigate the journey to that particular page in the pagesequence . 'ERROR' means show Error to the user that this api is failed",
        "showLabel": true,
        "showField": true
      },
      {
        "fieldDataType": "TEXT",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "Validation Error Message",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "validationErrorMessage",
        "labelInfo": null,
        "showLabel": true,
        "showField": true
      },
      {
        "fieldDataType": "BOOLEAN",
        "isMandatory": false,
        "fieldLabel": "Do you Want Multiple Journey Event code to Execute before api Response?",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "maxLength": 100,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor":["multijourneyEventCodeBeforeResponse","journeyEventCodeBeforeResponse"],
        "regex": null,
        "regexErrorMessage": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "Enter Content",
        "fieldName": "isjourneyEventCodeBeforeResponse",
        "labelInfo": null,
        "showLabel": true,
        "groupName": "journeyEventCodeBeforeResponse",
        "groupIndex": 2,
        "showField": true
      },
      {
        "fieldDataType": "TABLE",
        "dependentField": null,
        "isMandatory": false,
        "fieldLabel": "journey EventCode Before Response",
        "fieldAccessModifier": "EDITABLE",
        "addTableFields": true,
        "minLength": null,
        "maxLength": null,
        "error": null,
        "value": [],
        "validationJson": {
          "showField":{"==":[{"var":"isjourneyEventCodeBeforeResponse"},true]}
        },
        "rulesFor": null,
        "regex": null,
        "addStatus": false,
        "isTableFooter": false,
        "emitedValue": [],
        "showAction": true,
        "addMore": true,
        "tableRowActions": [{
            "actionCode": "ACCEPT",
            "icon": "check",
            "className": "clr-green",
            "isDisplay": true
        },
        {
            "actionCode": "EDIT",
            "icon": "edit",
            "className": "clr-blue",
            "isDisplay": false
        },
        {
            "actionCode": "DELETE",
            "icon": "delete",
            "className": "clr-red",
            "isDisplay": true
        }],
        "validateRowBeforeAdd": true,
        "showSerialNo": false,
        "tableFields": [
          {
            "fieldDataType": "TEXT",
            "isMandatory": true,
            "commonpropertyType": null,
            "fieldLabel": "Event Code",
            "fieldAccessModifier": "EDITABLE",
            "minLength": null,
            "upperCase":true,
            "maxLength": null,
            "error": null,
            "value": null,
            "validationJson": null,
            "rulesFor": null,
            "regex": null,
            "options": [],
            "regexErrorMessage": null,
            "rowNo": 1,
            "columnNo": 1,
            "groupName": "",
            rows:4,
            "groupIndex": 1,
            "placeholderText": "",
            "fieldName": "eventCode",
            "labelInfo": null,
            "showLabel": true,
            "showField": true
          }
            
        ],
        "regexErrorMessage": null,
        "errorIconPath": null,
        "rowNo": null,
        "columnNo": null,
        "placeholderText": "",
        "fieldName": "multijourneyEventCodeBeforeResponse",
        "showLabel": true,
        "labelInfo": null,
        "groupName": "journeyEventCodeBeforeResponse",
        "groupIndex": 2,
        "showField": true
      },
      {
        "fieldDataType": "TEXT",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "journey EventCode Before Response",
        "fieldAccessModifier": "EDITABLE",
        "upperCase":true,
        "minLength": null,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": {
          "showField":{"!":[{"var":"isjourneyEventCodeBeforeResponse"}]}

        },
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "journeyEventCodeBeforeResponse",
        "groupIndex": 2,
        "placeholderText": "",
        "fieldName": "journeyEventCodeBeforeResponse",
        "labelInfo": null,
        "showLabel": true,
        "showField": true
    },


    {
      "fieldDataType": "BOOLEAN",
      "isMandatory": false,
      "fieldLabel": "Do you Want Multiple Journey Event code to Execute After api Response is sucess?",
      "fieldAccessModifier": "EDITABLE",
      "minLength": null,
      "maxLength": 100,
      "error": null,
      "value": null,
      "validationJson": null,
      "rulesFor":["multijourneyEventCodeAfterResponseSucess","journeyEventCodeAfterResponseSucess"],
      "regex": null,
      "regexErrorMessage": null,
      "rowNo": null,
      "columnNo": null,
      "placeholderText": "Enter Content",
      "fieldName": "isjourneyEventCodeAfterResponseSucess",
      "labelInfo": null,
      "showLabel": true,
      "groupName": "journeyEventCodeAfterResponseSucess",
      "groupIndex": 3,
      "showField": true
    },
    {
      "fieldDataType": "TABLE",
      "dependentField": null,
      "isMandatory": false,
      "fieldLabel": "journey EventCode After Response Sucess",
      "fieldAccessModifier": "EDITABLE",
      "addTableFields": true,
      "minLength": null,
      "maxLength": null,
      "error": null,
      "value": [],
      "validationJson": {
        "showField":{"==":[{"var":"isjourneyEventCodeAfterResponseSucess"},true]}
      },
      "rulesFor": null,
      "regex": null,
      "addStatus": false,
      "isTableFooter": false,
      "emitedValue": [],
      "showAction": true,
      "addMore": true,
      "tableRowActions": [{
          "actionCode": "ACCEPT",
          "icon": "check",
          "className": "clr-green",
          "isDisplay": true
      },
      {
          "actionCode": "EDIT",
          "icon": "edit",
          "className": "clr-blue",
          "isDisplay": false
      },
      {
          "actionCode": "DELETE",
          "icon": "delete",
          "className": "clr-red",
          "isDisplay": true
      }],
      "validateRowBeforeAdd": true,
      "showSerialNo": false,
      "tableFields": [
        {
          "fieldDataType": "TEXT",
          "isMandatory": true,
          "commonpropertyType": null,
          "fieldLabel": "Event Code",
          "fieldAccessModifier": "EDITABLE",
          "minLength": null,
          "upperCase":true,
          "maxLength": null,
          "error": null,
          "value": null,
          "validationJson": null,
          "rulesFor": null,
          "regex": null,
          "options": [],
          "regexErrorMessage": null,
          "rowNo": 1,
          "columnNo": 1,
          "groupName": "",
          rows:4,
          "groupIndex": 1,
          "placeholderText": "",
          "fieldName": "eventCode",
          "labelInfo": null,
          "showLabel": true,
          "showField": true
        }
          
      ],
      "regexErrorMessage": null,
      "errorIconPath": null,
      "rowNo": null,
      "columnNo": null,
      "placeholderText": "",
      "fieldName": "multijourneyEventCodeAfterResponseSucess",
      "showLabel": true,
      "labelInfo": null,
      "groupName": "journeyEventCodeAfterResponseSucess",
      "groupIndex": 3,
      "showField": true
    },
    {
      "fieldDataType": "TEXT",
      "isMandatory": false,
      "commonpropertyType": null,
      "fieldLabel": "journey EventCode After Response Sucess",
      "fieldAccessModifier": "EDITABLE",
      "upperCase":true,
      "minLength": null,
      "maxLength": null,
      "error": null,
      "value": null,
      "validationJson": {
        "showField":{"!":[{"var":"isjourneyEventCodeAfterResponseSucess"}]}

      },
      "rulesFor": null,
      "regex": null,
      "options": [],
      "regexErrorMessage": null,
      "rowNo": 1,
      "columnNo": 1,
      "groupName": "journeyEventCodeAfterResponseSucess",
      "groupIndex": 3,
      "placeholderText": "",
      "fieldName": "journeyEventCodeAfterResponseSucess",
      "labelInfo": null,
      "showLabel": true,
      "showField": true
  },

  {
    "fieldDataType": "BOOLEAN",
    "isMandatory": false,
    "fieldLabel": "Do you Want Multiple Journey Event code to Execute After api Response is Failue?",
    "fieldAccessModifier": "EDITABLE",
    "minLength": null,
    "maxLength": 100,
    "error": null,
    "value": null,
    "validationJson": null,
    "rulesFor":["multijourneyEventCodeAfterResponseFailure","journeyEventCodeAfterResponseFailure"],
    "regex": null,
    "regexErrorMessage": null,
    "rowNo": null,
    "columnNo": null,
    "placeholderText": "Enter Content",
    "fieldName": "isjourneyEventCodeAfterResponseFailure",
    "labelInfo": null,
    "showLabel": true,
    "groupName": "journeyEventCodeAfterResponseFailure",
    "groupIndex": 4,
    "showField": true
  },
  {
    "fieldDataType": "TABLE",
    "dependentField": null,
    "isMandatory": false,
    "fieldLabel": "journey EventCode After Response Failure",
    "fieldAccessModifier": "EDITABLE",
    "addTableFields": true,
    "minLength": null,
    "maxLength": null,
    "error": null,
    "value": [],
    "validationJson": {
      "showField":{"==":[{"var":"isjourneyEventCodeAfterResponseFailure"},true]}
    },
    "rulesFor": null,
    "regex": null,
    "addStatus": false,
    "isTableFooter": false,
    "emitedValue": [],
    "showAction": true,
    "addMore": true,
    "tableRowActions": [{
        "actionCode": "ACCEPT",
        "icon": "check",
        "className": "clr-green",
        "isDisplay": true
    },
    {
        "actionCode": "EDIT",
        "icon": "edit",
        "className": "clr-blue",
        "isDisplay": false
    },
    {
        "actionCode": "DELETE",
        "icon": "delete",
        "className": "clr-red",
        "isDisplay": true
    }],
    "validateRowBeforeAdd": true,
    "showSerialNo": false,
    "tableFields": [
      {
        "fieldDataType": "TEXT",
        "isMandatory": true,
        "commonpropertyType": null,
        "fieldLabel": "Event Code",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "upperCase":true,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        rows:4,
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "eventCode",
        "labelInfo": null,
        "showLabel": true,
        "showField": true
      }
        
    ],
    "regexErrorMessage": null,
    "errorIconPath": null,
    "rowNo": null,
    "columnNo": null,
    "placeholderText": "",
    "fieldName": "multijourneyEventCodeAfterResponseFailure",
    "showLabel": true,
    "labelInfo": null,
    "groupName": "journeyEventCodeAfterResponseFailure",
    "groupIndex": 4,
    "showField": true
  },
  {
    "fieldDataType": "TEXT",
    "isMandatory": false,
    "commonpropertyType": null,
    "fieldLabel": "journey EventCode After Response Failure",
    "fieldAccessModifier": "EDITABLE",
    "upperCase":true,
    "minLength": null,
    "maxLength": null,
    "error": null,
    "value": null,
    "validationJson": {
      "showField":{"!":[{"var":"isjourneyEventCodeAfterResponseFailure"}]}

    },
    "rulesFor": null,
    "regex": null,
    "options": [],
    "regexErrorMessage": null,
    "rowNo": 1,
    "columnNo": 1,
    "groupName": "journeyEventCodeAfterResponseFailure",
    "groupIndex": 4,
    "placeholderText": "",
    "fieldName": "journeyEventCodeAfterResponseFailure",
    "labelInfo": null,
    "showLabel": true,
    "showField": true
}
      ]}},
  {
    "componentType": "BUTTON",
    "validateSection": false,
    "mandatory":false,
    "className": null,
    "sectionContent": {
      "label": "Add FormSubmitflow",
      "actionId": "ADD_FORMSUBMIT",
      "className": 'primary-btn mb-20',
      "isShow": true
    }
  }]
  export let pageSectionConfig_datascopefetchflow = [{
    "componentType": "TITLE",
    "className": null,
    "validateSection":false,
    "mandatory":false,
    "sectionContent": {
      "isShow": true,
      "titleData": "DataScopeFetchflow Builder"
    }},
    {
      "componentType": "FORM",
      "validateSection": true,
      "mandatory": false,
      "className": "mb-10 x-large coapplicant-padding",
      "sectionContent": {
        "options": {
          "columnSize": 2
        },
        "isShow": true,
        "fields": [
          {
            "fieldDataType": "TEXT",
            "isMandatory": true,
            "commonpropertyType": null,
            "fieldLabel": "Fetchflow Name",
            "fieldAccessModifier": "EDITABLE",
            "minLength": null,
            "maxLength": null,
            "error": null,
            "value": null,
            "validationJson": null,
            "rulesFor": null,
            "regex": null,
            "options": [],
            "regexErrorMessage": null,
            "rowNo": 1,
            "columnNo": 1,
            "groupName": "",
            "groupIndex": 1,
            "placeholderText": "",
            "fieldName": "fetchflow",
            "labelInfo": null,
            "showLabel": true,
            "showField": true
        },
        {
          "fieldDataType": "TEXT_AREA",
          "isMandatory": false,
          "commonpropertyType": null,
          "fieldLabel": "JSON Logic to Validate before hitting the API",
          "fieldAccessModifier": "EDITABLE",
          "minLength": null,
          "upperCase":true,
          "maxLength": null,
          "error": null,
          "value": null,
          "validationJson": null,
          "rulesFor": null,
          "regex": null,
          "options": [],
          "regexErrorMessage": null,
          "rowNo": 1,
          "columnNo": 1,
          "groupName": "",
          rows:8,
          "groupIndex": 1,
          "placeholderText": "",
          "fieldName": "validate",
          "labelInfo": "This JSON logic decides wheather to hit this api or skip this api based on the condition provided in the JSON \n to HIT the api JSON has to return 'EXECUTE' code \n to skip the api call JSON has to return 'NEXT'",
          "showLabel": true,
          "showField": true
        },
        {
          "fieldDataType": "TABLE",
          "dependentField": null,
          "isMandatory": false,
          "fieldLabel": "Params",
          "fieldAccessModifier": "EDITABLE",
          "addTableFields": true,
          "minLength": null,
          "maxLength": null,
          "error": null,
          "value": [],
          "validationJson": null,
          "rulesFor": null,
          "regex": null,
          "addStatus": false,
          "isTableFooter": false,
          "emitedValue": [],
          "showAction": true,
          "addMore": true,
          "tableRowActions": [{
              "actionCode": "ACCEPT",
              "icon": "check",
              "className": "clr-green",
              "isDisplay": true
          },
          {
              "actionCode": "EDIT",
              "icon": "edit",
              "className": "clr-blue",
              "isDisplay": false
          },
          {
              "actionCode": "DELETE",
              "icon": "delete",
              "className": "clr-red",
              "isDisplay": true
          }],
          "validateRowBeforeAdd": true,
          "showSerialNo": false,
          "tableFields": [
            {
              "fieldDataType": "TEXT",
              "isMandatory": true,
              "commonpropertyType": null,
              "fieldLabel": "Key Name",
              "fieldAccessModifier": "EDITABLE",
              "minLength": null,
              "upperCase":true,
              "maxLength": null,
              "error": null,
              "value": null,
              "validationJson": null,
              "rulesFor": null,
              "regex": null,
              "options": [],
              "regexErrorMessage": null,
              "rowNo": 1,
              "columnNo": 1,
              "groupName": "",
              rows:4,
              "groupIndex": 1,
              "placeholderText": "",
              "fieldName": "variablekey",
              "labelInfo": null,
              "showLabel": true,
              "showField": true
            },
              {
                  "fieldDataType": "DROPDOWN",
                  "dependentField": null,
                  "isMandatory": true,
                  "upperCase":true,
                  "fieldLabel": "static variable/ object path  variable / Json Rule Output?",
                  "fieldAccessModifier": "EDITABLE",
                  "minLength": null,
                  "maxLength": null,
                  "error": null,
                  "value": "",
                  "validationJson": null,
                  "rulesFor": null,
                  "regex": null,
                  "options": [{
                    "optionName":"STATIC",
                    "optionKey":"STATIC",
  
                  },{
                    "optionName":"PATH",
                    "optionKey":"PATH",
  
                  },{
                    "optionName":"RULE_OUTPUT",
                    "optionKey":"RULE_OUTPUT",
  
                  },],
                  "regexErrorMessage": null,
                  "errorIconPath": null,
                  "rowNo": null,
                  "columnNo": null,
                  "placeholderText": "",
                  "fieldName": "variableType",
                  "showLabel": true,
                  "labelInfo": null,
                  "groupName": "",
                  "groupIndex": 4,
                  "showField": true
              },
              {
                "fieldDataType": "TEXT_AREA",
                "isMandatory": false,
                "commonpropertyType": null,
                "fieldLabel": "value",
                "fieldAccessModifier": "EDITABLE",
                "minLength": null,
                "upperCase":true,
                "maxLength": null,
                "error": null,
                "value": null,
                "validationJson": null,
                "rulesFor": null,
                "regex": null,
                "options": [],
                "regexErrorMessage": null,
                "rowNo": 1,
                "columnNo": 1,
                "groupName": "",
                rows:4,
                "groupIndex": 1,
                "placeholderText": "",
                "fieldName": "variablevalue",
                "labelInfo": null,
                "showLabel": true,
                "showField": true
            }
          ],
          "regexErrorMessage": null,
          "errorIconPath": null,
          "rowNo": null,
          "columnNo": null,
          "placeholderText": "",
          "fieldName": "params",
          "showLabel": true,
          "labelInfo": null,
          "groupName": "",
          "groupIndex": 1,
          "showField": true
      },{
        "fieldDataType": "TEXT_AREA",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "JSON Logic to Validate After hitting the API",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "upperCase":true,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        rows:8,
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "validateResponse",
        "labelInfo": "This JSON logic decides what to do after hitting the api the JSON logic can return following codes: 'PROCEED' which means to go to the next formSubmitflow. 'NEXT' means to move the page to the next page of the pagesequence . 'PAGE_CODE' you can insert certain page code in the journey to navigate the journey to that particular page in the pagesequence . 'ERROR' means show Error to the user that this api is failed",
        "showLabel": true,
        "showField": true
      },{
        "fieldDataType": "TEXT_AREA",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "JSON Logic to Validate Api Errors",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "upperCase":true,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        rows:8,
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "apiError",
        "labelInfo": "This JSON logic decides what to do after hitting the api the JSON logic can return following codes: 'PROCEED' which means to go to the next formSubmitflow. 'NEXT' means to move the page to the next page of the pagesequence . 'PAGE_CODE' you can insert certain page code in the journey to navigate the journey to that particular page in the pagesequence . 'ERROR' means show Error to the user that this api is failed",
        "showLabel": true,
        "showField": true
      },
      {
        "fieldDataType": "TEXT",
        "isMandatory": false,
        "commonpropertyType": null,
        "fieldLabel": "Validation Error Message",
        "fieldAccessModifier": "EDITABLE",
        "minLength": null,
        "maxLength": null,
        "error": null,
        "value": null,
        "validationJson": null,
        "rulesFor": null,
        "regex": null,
        "options": [],
        "regexErrorMessage": null,
        "rowNo": 1,
        "columnNo": 1,
        "groupName": "",
        "groupIndex": 1,
        "placeholderText": "",
        "fieldName": "validationErrorMessage",
        "labelInfo": null,
        "showLabel": true,
        "showField": true
    }
    ]}},
    {
      "componentType": "BUTTON",
      "validateSection": false,
      "mandatory":false,
      "className": null,
      "sectionContent": {
        "label": "Add Fetch flow",
        "actionId": "ADD_FETCHFLOW",
        "className": 'primary-btn mb-20',
        "isShow": true
      }
    }]
  
export let baseConfig = {}


export let importPopupPageSection =  [{
  "componentType": "FORM",
  "validateSection": true,
  "mandatory": false,
  "className": "mb-10 x-large coapplicant-padding",
  "sectionContent": {
    "options": {
      "columnSize": 1
    },
    "isShow": true,
    "fields": [
      {
          "fieldDataType": "TEXT_AREA",
          "isMandatory": true,
          "commonpropertyType": null,
          "fieldLabel": "Paste your PageMeta config",
          "fieldAccessModifier": "EDITABLE",
          "minLength": null,
          "upperCase":true,
          "maxLength": null,
          "error": null,
          "value": null,
          "validationJson": null,
          "rulesFor": null,
          "regex": null,
          "options": [],
          "regexErrorMessage": null,
          "rowNo": 1,
          "columnNo": 1,
          "groupName": "",
          rows:12,
          "groupIndex": 1,
          "placeholderText": "",
          "fieldName": "pageMetaConfig",
          "labelInfo": null,
          "showLabel": true,
          "showField": true
      },
      
    ]
  }
}]